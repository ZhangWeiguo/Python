# -*- encoding:utf-8 -*-
'''
一只袋鼠要从河这边跳到河对岸，河很宽，
但是河中间打了很多桩子，每隔一米就有一个，
每个桩子上都有一个弹簧，袋鼠跳到弹簧上就可以跳的更远。
每个弹簧力量不同，用一个数字代表它的力量，如果弹簧力量为5，
就代表袋鼠下一跳最多能够跳5米，如果为0，就会陷进去无法继续跳跃。
河流一共N米宽，袋鼠初始位置就在第一个弹簧上面，
要跳到最后一个弹簧之后就算过河了，给定每个弹簧的力量，
求袋鼠最少需要多少跳能够到达对岸。如果无法到达输出-1
'''

# N = 6
# L = [4,5,0,0,1,1]
N = int(raw_input())
L = map(int,raw_input().split())

# # 39
# # 3 6 6 6 3 8 9 8 5 2 9 7 3 6 5 4 2 3 6 9 9 8 6 4 1 0 4 4 8 9 3 6 0 7 8 1 1 8 4

# N = 39
# L = map(int,"3 6 6 6 3 8 9 8 5 2 9 7 3 6 5 4 2 3 6 9 9 8 6 4 1 0 4 4 8 9 3 6 0 7 8 1 1 8 4".split())
P = [0]*N

for i in range(N):
    k = N - 1 - i
    if L[k] == 0:
        P[k] = -1
    else:
        if L[k] >= i + 1:
            P[k] = 1
        else:
            mi = -1
            for j in range(1,L[k]+1):
                if P[k+j] == -1:
                    temp = -1
                else:
                    temp = P[k+j]+1
                if temp != -1 and mi == -1:
                    mi = temp
                else:
                    if temp != -1 and mi > temp:
                        mi = temp
            P[k] = mi
print P[0]



